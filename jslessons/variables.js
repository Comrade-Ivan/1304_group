"use strict" //Включаем строгий режим
//alert("1"); Легкий способ проверить что файл подключен

/*alert('Привет');
alert('Мир');*/

//------------------Переменные. Создание переменных-------------------------
// let greeting = "Привет, мир!"; //Объявление перменной
// // Нотации - camelCase (greetingMessage) snake_case (greeting_message)
// // Названия начинаются с маленькой буквы и должны отображать содержимое переменной
// // Переменную можно объявить только один раз, а использовать сколько угодно раз.
// alert(greeting); // == alert("Привет, мир!");
// // ^ Используем переменную
// greeting = "Привет, всем!"; //Изменяем значение переменной
// alert(greeting); // == alert("Привет, всем!");

// let goodbye; //Можно объявлять переменные и не присваивать им значения
// alert(goodbye); //Undefined - значение не задано
// goodbye = "Пока, всем!";
// alert(goodbye); //"Пока, всем!"

// greeting = goodbye; //Записываем в переменную значение из другой переменной
// alert(greeting); //"Пока, всем!"
// alert(goodbye); //"Пока, всем!"

//---------------Константы-------------------------------------------------------
// const myBirthday = '14.05.1994'; //Объявляем константу (константа - переменная которую нельзя перезаписать);
// //myBirthday = "15/05/1994"; - не получится, нельзя изменить константу
// const COLOR_RED = "#F00"; //В них удобно заносить палитру сайта
// const QUIT_MESSAGE = "Вы уверены что хотите выйти?"; //Или делать сайт мультиязычным

//-------------Типы данных---------------------------------------------------------
/*JS - язык с динамическим типом данных*/
// let a = 42; //1. Number - Число
// alert( typeof(a) ); //typeof(variable) - проверяет тип данных у переменной;
// let a1 = Infinity; // Бесконечность
// let a2 = NaN; //NaN - Ошибка вычисления (Not a Number);

// let b = "foo"; //2. String - строка // Двойные кавычки
// let b2 = 'bar'; //Одинарные кавычки
// let b3 = `foo${b2}`; // b3 = `foobar`; //Обратные кавычки
// /*Конкатенация - строки скаладываются через +*/
// let foobar = "foo" + "bar"; //"foobar"

// let c = true; //или false 3. Boolean - Булевый/Логический тип (ИСТИНА или ЛОЖЬ)

// let d; // 4. undefined - значение не определено
// let e = null; // 5. Null - ничего

// //5. Все остальное в JS является типом данных Object - Объект;
// let user = {name: "Василий", lastname: "Петров"}; //object
// let fruits = ["Яблоко", "Ананас", "Груша", "Апельсин"]; //object

//--------------------Преобразование типов
// let result = 2 + "3"; //"23" - двойка приводится к тексту "2" + "3" = "23"
//Строковое
// let a = true;
// let string = String(a);
// alert(string); // "true"
// let fruits = ["Яблоко", "Ананас", "Груша", "Апельсин"];
// alert( String(fruits) ); //Яблоко,Ананас,Груша,Апельсин
// let user = {name: "Василий", lastname: "Петров"};
// alert( String(user) ); //[object Object];
// console.log(user);
// console.log(String(user));
/*Строковое преобразование - так как пишется*/
//Числовое
// let a = "10";
// let b = "2";
// let result = a / b; //Если в строке содержится ТОЛЬКО число, она при расчетах (кроме +) автоматически приведется к числовому значению
// alert(result);
// let c = "123abc";
// alert(Number(c)); //NaN
// let d = Number(undefined); //NaN
// let e = Number(null); // 0
// let f = Number(true); // 1
// let g = Number(false); // 0

// let result2 = +a + +b;//+a - приведение у числу
// alert(result2); //12 (обе переменные перед сложением были приведены к числу)

//Логическое (к булевому типу)
//Значения, которые интуитивно «пустые», вроде 0, пустой строки, null, undefined и NaN, становятся false
// let a = Boolean(0) //false
// let b = Boolean(1) //true
// let c = Boolean(-1) //true

// let d = Boolean("abc") //true
// let e = Boolean("") //false
// let f = Boolean(" ") //true - пробел считается за символ, строка не пустая

// let g = Boolean(null) //false
// let h = Boolean(undefined) //false
// let i = Boolean(NaN) //false

//----------------Математические операторы-------------------------

// let a = 4;
// let b = 2;

// let result1 = a + b; // сложение
// let result2 = a - b; // вычитание
// let result3 = a / b; // деление
// let result4 = a * b; // умножение
// let result5 = a % b; // Остаток от деления (0) 4/2 = 2 (остаток = 0) 10/3 = 3.(3) (остаток = 1)
// let result6 = a ** b; //Возведение в степень 4^2 = 16;

// //Использование старого значения переменной
// let c = 5;
// c = c + 10; //Так как оператор присвоения(=) имеет самый низкий приоритет, то пока новое значение не присвоится внутри формулы будет использоваться старое значение
// alert(c); //15
// let d = 10;
// d += 5; //Сокращенный синтаксис (d = d + 5); += *= -= /=
// alert(d); //15
// //Инкремент/Декремент

// let i = 0;
// i++; //i = i + 1; Инкремент
// alert(i); //1
// let j = 10;
// j--; //j = j - 1; Декремент
// alert(j) //9

//Взаимодействие: alert, prompt, confirm
//Все три команды приостанавливают действие кода
//Их внешний вид определен браузером и неизменяем

//alert(string) - Отображает сообщение с string на экране (автоматически перевод содержимое string к строке)
// alert("Привет, мир!");
// let result = 4 + 2;
// alert(result);
// let result2 = 10 + 5;
// alert(result + " " + result2); //Выводим и result и result2
// //prompt(string [,default]) - Просит пользователя что-то ввести c вопросом string. Если пользователь ничего не введет будет использован необязательный параметр default;
// //!!! Возвращает СТРОКУ !!!
// let username = prompt("Введите свое имя", "anonym");
// alert(username);
// let a = +prompt("Введите число", 5); //Если спрашиваете у пользователя число - используйте +prompt()
// let result3 = a + 10;
// alert(result3);
// //confirm(string) - Спрашивает у пользователя вопрос "Да/Нет". Возвращает true при положительном ответе и false при отрицательном
// let ageCheck = confirm("Вам есть 18?");
// alert(ageCheck);
// //console.log(variable) - Выводит данные в консоль
// console.log(ageCheck);
// console.log(result3);

let count = 0;
while(count < 10) {
  count++;
  console.log(count);
}




